swagger: '2.0'
info:
  description: 'This is the APIs document for the GOYO on eBaoCloud. <br /> Before you start the development, please refer to [ReadMe](http://ualapi.ebaocloud.life/readme/) which provides a more detail introduction on how to use these APIs. <br /> Also you can use the ''try it out'' function provided by this API document to test the API. <br /> And, we strongly recommend you using [Postman](https://www.getpostman.com/) to do the testing and use these [test cases](https://www.getpostman.com/collections/d371e15c8eabfb8cf730) as a reference. <br />You can also run the cases here: [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/d371e15c8eabfb8cf730#?env%5BUAL%20UAT%5D=W3siZW5hYmxlZCI6dHJ1ZSwia2V5IjoiaG9zdF91cmwiLCJ2YWx1ZSI6Imh0dHA6Ly91YWxhcGkuZWJhb2Nsb3VkLmxpZmUiLCJ0eXBlIjoidGV4dCJ9XQ==)'
  version: '0.9'
  title: 'eBaoCloud API for GOYO, UAL'
  contact:
    name: eBaoCloud Support
    url: 'http://www.ebaotech.com'
    email: liliang.zhu@ebaotech.com
host: ualapi.ebaocloud.life
basePath: /libff
externalDocs:
  description: ReadMe before you start your development
  url: 'http://ualapi.ebaocloud.life/readme/'
tags:
  - name: proposal
    description: Everything about your Proposals
  - name: health data
    description: Health data from GOYO
schemes:
  - http
  - https
produces:
  - application/json
paths:
  /services/rest/GOYO/healthData:
    post:
      tags:
        - health data
      summary: Submit a list of insurer's health data from GOYO.
      description: |
        This API provides a ```POST``` method and accept a set of health data. The request body contais 2 objects: **totalCount** and **healthDatas** . The healthDatas is an array which contains a set of healthData and the totalCount indicates the array size.
         Request side needs to make sure the **totalCount** is equals to the **healthDatas** array size, otherwise, error message will be sent.
      parameters:
        - in: body
          name: body
          description: Details of the submitted health data list.
          required: true
          schema:
            $ref: '#/definitions/HealthDataSubmit'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/HealthDataSubmitResponse'
      x-swagger-router-controller: Health Data
  /services/rest/goyoProposalService/saveProposal:
    post:
      tags:
        - proposal
      summary: Submit a proposal detail.
      description: |
        This API provides a ```POST``` method and accept a set of proposal data. The request body contais a proposal info object: **encryptedUserData** and **proposalInfo** . The proposal object contains all information such as base information, insured(s), policy holder, main coverages(plan) and riders(if existing).
      parameters:
        - in: body
          name: bodyParam
          description: Proposal Details
          required: true
          schema:
            $ref: '#/definitions/ProposalSubmit'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ProposalSubmitResponse'
      x-swagger-router-controller: Save Proposal
  '/rest/goyoProposalService/generateProposalCSV/{date}':
    get:
      tags:
        - proposal
      summary: Retrieve the proposal data (in CSV) as a daily basis.
      description: This API provides a ```GET``` method and accept a date (YYYY-MM-DD) as parameter. The resposne is a CSV file will all the proposal data of that day.
      produces:
        - text/csv
      parameters:
        - name: date
          in: path
          description: Date of the proposal data.
          required: true
          type: string
          format: date
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Date supplied
        '404':
          description: Proposal date not found
definitions:
  HealthDataSubmit:
    type: object
    properties:
      totalCount:
        type: number
        example: 1
        description: The total records count of the health data list.
      healthDatas:
        type: array
        items:
          $ref: '#/definitions/HealthData'
        description: list of health data
    required:
      - totalCount
      - healthDatas
  HealthData:
    type: object
    required:
      - uuid
      - proposalNo
      - date
    properties:
      uuid:
        type: string
        example: 'GOYO123456789'
        description: Request ID, Unique ID of this record.
      proposalNo:
        type: string
        example: '9123456789'
        description: Propsoal No.
      date:
        type: string
        format: date
        example: '2017-06-01'
        description: The date when the health data gathered.
      calories:
        type: number
        example: 30
        description: Calories
      steps:
        type: number
        example: 3045
        description: Walk steps
      distance:
        type: number
        example: 4522
        description: Distance
      sleep:
        type: number
        example: 300
        description: Sleep
      heartRate:
        type: number
        example: 90
        description: Heart rate
      extension:
        type: string
        description: 'Use this object to hold the aditional fields due to local customizations. You can put any string (json, xml, text etc.) in this field. eBaoCloud will NOT process the content but only store this field. You can retrieve this field later.'
  HealthDataSubmitResponse:
    type: object
    required:
      - status
    properties:
      status:
        type: number
        enum:
          - 0
          - 1
        description: '0: Successful, 1: Failed'
      errorMessages:
        type: array
        items:
          type: string
      message:
        type: string
        description: common message
  ProposalSubmit:
    type: object
    description: Proposal submit request
    required:
      - proposalRequestId
      - encryptedUserData
      - proposalInfo
    properties:
      proposalRequestId:
        type: string
        description: 'Request ID, Unique ID for this record.'
      encryptedUserData:
        type: string
        description: 'The '
      proposalInfo:
        $ref: '#/definitions/ProposalInfo'
  ProposalInfo:
    type: object
    description: Proposal information
    properties:
      proposalCode:
        type: string
        description: 'Proposal No., keep empty if you dont have one, system will generate one for you (10 digital number, start with 9). '
        example: '9123456789'
      packageId:
        type: integer
        description: 'The according package ID, for normal case, it should equals to the product ID.'
        example: '9100271'
      productId:
        type: integer
        description: The according product ID.
        example: '9100271'
      insureds:
        type: array
        description: 'Insured list, for normal case, has one record.'
        items:
          $ref: '#/definitions/Person'
      proposer:
        $ref: '#/definitions/Person'
      mainCoverages:
        type: array
        description: 'Coverage list, need at least one record (main plan).'
        items:
          $ref: '#/definitions/Coverage'
      totalFirstYearPrem:
        type: number
        description: The according product ID.
        example: 400
      proposalStatus:
        type: string
        description: Proposal status
        default: '80'
        example: '80'
      inforceDate:
        type: string
        format: date
        example: '2017-06-02'
      endDate:
        type: string
        format: date
        description: ''
        example: '2017-06-02'
      submitDate:
        type: string
        format: date
        description: ''
        example: '2017-06-02'
      salesCompanyCode:
        type: string
        description: 'Sale info: company'
        default: GOYO
        example: GOYO
      salesChannelCode:
        type: string
        description: 'Sale info: channel'
        default: GOYO
        example: GOYO
      beneficiaries:
        type: array
        description: Beneficiary list
        items:
          $ref: '#/definitions/Person'
  Coverage:
    type: object
    properties:
      productId:
        type: integer
        description: The according product ID.
        example: '9100271'
      productCode:
        type: string
        description: The according product code.
      masterProductId:
        type: integer
        description: Master product ID if it is a rider. No value when it is a main plan.
      unitFlag:
        type: integer
        description: For investment product.
      paymentFreq:
        type: string
        enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '8'
        description: 'Payment frequency. 0:Not Relevant, 1:Yearly, 2:Half Yearly, 3:Quarterly, 4:Monthly, 5:Single, 8:Daily, '
      sa:
        type: number
        description: Sum assured / Face amount.
      premium:
        type: number
        description: Premium.
      unit:
        type: number
        description: For investment product. Unit
      benefitlevel:
        type: number
        description: benefitlevel
      chargePeriod:
        $ref: '#/definitions/ChargePeriod'
      coveragePeriod:
        $ref: '#/definitions/CoveragePeriod'
  ChargePeriod:
    type: object
    description: charge period
    properties:
      periodType:
        type: integer
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        description: 'charge mode/type. 0: NA, 1: Single Premium, 2: Pay for Certain Year, 3: Pay Up to Certain Age, 4: Pay for Whole Life.'
        example: 1
      periodValue:
        type: integer
        example: 1
  CoveragePeriod:
    type: object
    description: coverage period
    properties:
      periodType:
        type: integer
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        description: 'charge mode/type. 0: NA, 1: Cover Whole Life, 2: Cover for a Certain Year, 3: Cover Up to Certain Age, 4: Cover for a Certain Month.'
        example: 1
      periodValue:
        type: number
        example: 1
  Person:
    type: object
    required:
      - firstName
      - lastName
      - birthday
      - gender
      - laPhRela
      - certiCode
    properties:
      firstName:
        type: string
        description: First name of the person
        example: John
      lastName:
        type: string
        description: Last name of the person
        example: Tang
      birthday:
        type: string
        format: date
        example: '1990-02-03'
      gender:
        type: string
        enum:
          - F
          - M
          - 'N'
        description: 'F: Female, M: Male, N: Unknown'
        example: F
      jobCateId:
        type: integer
        description: job category id
      jobCateCode:
        type: string
        description: job category code
      laPhRela:
        type: integer
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
        example: '1'
        description: 'The relationship between insured and policy holder. Default: 1 for self. 1:Self, 2:Child, 3:Spouse, 4:Employee, 5:Grantor, 6:Ward, 7:Others, 8:Business Partner, 9:Debtor, 10:Parent, 11:Sibling, 12:Grandparent, 13:Grandchild, 14:Kindred, 15:Cohabitation, 16:Corporation, 17:Employer, 18:Heir at law, 19:Wife, 20:Husband, 21:Father, 22:Mother, 23:Grandfather, 24:Grandmother, 25:Older Brother(Sister), 26:Little Brother(Sister), 27:Uncle, 28:Untie, 29:Cousin, 30:Nephew(Niece)'
        default: '1'
      certiType:
        type: integer
        description: 'Certificate type, in GOYO, the default is 1:ID. 1: ID, 2: Military ID, 3: Passport Number, 4: Birth Certificate, 6: N/A, 9: Others'
        enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - 9
        example: 1
      certiCode:
        type: string
        description: certificate number
        example: X2434234
      mobile:
        type: string
        description: mobile
        example: '98473223'
      email:
        type: string
        description: email
        example: 98473223@email.com
      marriageStatus:
        type: integer
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: '1: Married, 2: Single, 3: Divorced, 4: Widowed, 5: Separated, 6: Other'
        example: 1
      childCount:
        type: integer
        description: child number
      nationality:
        type: string
        example: Sri Lanka
      nationCode:
        type: string
        enum:
          - lk
        example: lk
      address:
        type: array
        description: address list
        items:
          $ref: '#/definitions/Address'
  Address:
    type: object
    properties:
      countryCode:
        type: string
      province:
        type: string
      city:
        type: string
      region:
        type: string
      address:
        type: string
      addressExt1:
        type: string
      addressExt2:
        type: string
      postCode:
        type: string
        example: A12235647
  ProposalSubmitResponse:
    type: object
    required:
      - status
    properties:
      status:
        type: number
        enum:
          - 0
          - 1
        description: '0: Successful, 1: Failed'
      errorMessages:
        type: array
        items:
          type: string
      message:
        type: string
        description: common message
